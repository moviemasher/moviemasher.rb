var search_data = {"index":{"searchIndex":["moviemasher","av","asset","awshelper","awsinitservice","azureinitservice","callback","chain","chainblend","chaineffects","chainmodule","chainoverlay","chainscaler","clip","defaults","destination","downloadservice","error","configuration","critical","job","jobinput","joboutput","jobrender","jobsource","jobsyntax","jobupload","object","parameter","runtime","state","todo","evaluate","filedownloadservice","filehelper","filequeueservice","fileuploadservice","fill","filter","filterevaluated","filterhash","filterhelpers","filtersetpts","filtersource","filtersourcecolor","filtersourceimage","filtersourceraw","filtersourcevideo","floatutil","gain","graph","graphmash","graphraw","graphutility","hashable","httpdownloadservice","httpuploadservice","httpsdownloadservice","httpsuploadservice","info","initservice","input","intermediate","job","layer","layercolor","layermodule","layerraw","layerrawimage","layerrawvideo","layertheme","layertransition","mash","metareader","method","output","parameters","path","queueservice","s3downloadservice","s3uploadservice","service","shellhelper","source","sqsqueueservice","timerange","transfer","trigger","type","uploadservice","<<()","[]()","[]()","[]=()","__bucket_options()","__coerce_if_numeric()","__crop_filter()","__crop_or_pad()","__filter_trim_input()","__font_default()","__join_commands()","__lines_in_ini()","__merger_default()","__min_or_max()","__pad_filter()","__queue_url()","__raise_if_empty()","__raise_unless()","__require_sdk()","__scaler_default()","__service()","__string()","__unless_empty()","__url()","_get()","_info()","_meta()","_present()","_set()","add_new_layer()","add_new_layer()","add_slash_end()","add_slash_start()","add_slashes()","audio()","audio()","audio?()","audio_bitrate()","audio_bitrate=()","audio_codec()","audio_codec=()","audio_command()","audio_duration()","audio_graphs()","audio_graphs()","audio_rate()","audio_rate=()","av()","av()","av_type()","aws_configuration()","backcolor()","backcolor=()","base_source()","base_source()","base_source()","base_source=()","bucket()","bucket=()","calculator()","callbacks()","capture()","chain_command()","chain_command()","chain_command()","chain_command_resize()","chain_labels()","chain_labels()","clip_has_audio()","clips_having_audio()","clips_in_range()","cmp()","coerce_if_numeric()","color_value()","command()","command_parameters()","concat()","configuration()","configuration()","configure()","configure()","configure()","configure()","configure_services()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_if()","create_if()","create_if()","create_layer()","data()","data=()","destination()","destination()","destination=()","destination=()","dimensions()","dimensions()","dimensions()","dimensions=()","dimensions=()","directory()","directory=()","directory_files()","directory_files()","directory_files()","directory_path()","download()","download()","download()","download()","download()","download_asset()","download_source()","downloader()","dup()","duration()","duration()","duration()","duration()","duration()","duration=()","duration=()","end_seconds()","equals?()","equation()","error()","error=()","error?()","error?()","error?()","error?()","error?()","error?()","escape()","execute()","extension()","extension()","extension()","extension()","extension=()","extension=()","extension=()","extension=()","ffmpeg()","file()","file_name()","file_name()","fill()","fill=()","filter_command()","filter_command()","filter_command()","filter_command()","filter_command()","filter_command()","filter_name()","filter_name()","filter_name()","forecolor()","forecolor=()","fps()","full_path()","gain()","gain=()","gain_changes()","get()","goodbye()","graph_command()","graph_command()","graph_command()","graph_scope()","gtr()","gtre()","hash?()","hello()","host()","host=()","http()","id()","includes?()","init()","init()","init()","init_av_input()","init_hash()","init_hash()","init_hash()","init_hash()","init_hash()","init_hash()","init_hash()","init_hash()","init_input()","init_mash_input()","init_string()","initer()","initialize_chains()","initialize_chains()","initialize_chains()","initialize_chains()","initialize_chains()","initialize_filters()","initialize_filters()","initialize_filters()","initialize_filters()","input_length()","input_scope()","input_time()","input_trim()","input_trim_range()","inputs()","inputs()","inputs()","inputs()","inputs()","inputs()","inputs()","inputs()","inputs()","inputs()","instance()","intersection()","keys()","layer_command()","layer_command()","layer_command()","layer_command()","layer_command()","layer_command()","layer_scope()","layer_scope()","length()","length()","length()","length=()","length=()","length=()","length_seconds()","less()","log()","log_entry()","loop()","loop()","loop=()","loop=()","mash()","mash=()","max()","media()","media()","media_count_for_clips()","media_search()","merge()","merger_command()","message()","meta_path()","metadata()","metadata()","method()","method=()","min()","mm_cmp()","mm_dir_horz()","mm_dir_vert()","mm_fontfamily()","mm_fontfile()","mm_horz()","mm_max()","mm_min()","mm_paren()","mm_textfile()","mm_vert()","module_for_type()","module_source()","module_source()","module_source()","module_source=()","name()","name()","name()","name()","name=()","name=()","name=()","name=()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","no_audio()","no_audio()","no_audio=()","no_audio=()","no_video()","no_video=()","nonzero()","object()","offset()","offset()","offset=()","offset=()","output_command()","output_path()","outputs()","outputs_desire()","parameters()","parameters=()","parse()","pass()","pass=()","path()","path()","path=()","path=()","port()","port=()","precision()","precision()","precision=()","prefixed_configuration()","preflight()","preflight()","preflight()","preflight()","preflight()","process()","process()","process_jobs()","process_queues()","progress()","progress_seconds()","progress_seconds=()","quality()","quality=()","query_string()","queue_url()","queues()","raise_unless_rendered()","range()","range()","receive_job()","receive_job()","receive_job()","region()","region=()","relative?()","render_path()","required()","required=()","resolved_hash()","rgb()","rgba()","s3_client()","s3_configuration()","s3_resource()","safe_path()","scope_value()","secure()","secure()","secure()","secure()","sequence_complete()","services()","set()","set_if()","set_output_commands()","slice()","sort()","source()","source=()","sox()","sqs_client()","sqs_configuration()","start()","start()","start=()","start=()","start_seconds()","stop()","string()","strip_slash_end()","strip_slash_start()","strip_slashes()","switch()","symbolize()","synchronize()","to_hash()","to_json()","to_s()","to_s()","trigger()","trigger=()","trim_command()","trim_command()","type()","type()","type()","type()","type()","type=()","type=()","type=()","update()","update_inputs()","update_outputs()","upload()","upload()","upload()","upload()","upload()","uploader()","url()","url()","url_count()","url_path()","user()","user=()","value()","values()","video()","video?()","video_bitrate()","video_bitrate=()","video_codec()","video_codec=()","video_duration()","video_format()","video_format=()","video_graphs()","video_graphs()","video_ranges()","video_rate()","video_rate=()","changelog","documentation","readme"],"longSearchIndex":["moviemasher","moviemasher::av","moviemasher::asset","moviemasher::awshelper","moviemasher::awsinitservice","moviemasher::azureinitservice","moviemasher::callback","moviemasher::chain","moviemasher::chainblend","moviemasher::chaineffects","moviemasher::chainmodule","moviemasher::chainoverlay","moviemasher::chainscaler","moviemasher::clip","moviemasher::defaults","moviemasher::destination","moviemasher::downloadservice","moviemasher::error","moviemasher::error::configuration","moviemasher::error::critical","moviemasher::error::job","moviemasher::error::jobinput","moviemasher::error::joboutput","moviemasher::error::jobrender","moviemasher::error::jobsource","moviemasher::error::jobsyntax","moviemasher::error::jobupload","moviemasher::error::object","moviemasher::error::parameter","moviemasher::error::runtime","moviemasher::error::state","moviemasher::error::todo","moviemasher::evaluate","moviemasher::filedownloadservice","moviemasher::filehelper","moviemasher::filequeueservice","moviemasher::fileuploadservice","moviemasher::fill","moviemasher::filter","moviemasher::filterevaluated","moviemasher::filterhash","moviemasher::filterhelpers","moviemasher::filtersetpts","moviemasher::filtersource","moviemasher::filtersourcecolor","moviemasher::filtersourceimage","moviemasher::filtersourceraw","moviemasher::filtersourcevideo","moviemasher::floatutil","moviemasher::gain","moviemasher::graph","moviemasher::graphmash","moviemasher::graphraw","moviemasher::graphutility","moviemasher::hashable","moviemasher::httpdownloadservice","moviemasher::httpuploadservice","moviemasher::httpsdownloadservice","moviemasher::httpsuploadservice","moviemasher::info","moviemasher::initservice","moviemasher::input","moviemasher::intermediate","moviemasher::job","moviemasher::layer","moviemasher::layercolor","moviemasher::layermodule","moviemasher::layerraw","moviemasher::layerrawimage","moviemasher::layerrawvideo","moviemasher::layertheme","moviemasher::layertransition","moviemasher::mash","moviemasher::metareader","moviemasher::method","moviemasher::output","moviemasher::parameters","moviemasher::path","moviemasher::queueservice","moviemasher::s3downloadservice","moviemasher::s3uploadservice","moviemasher::service","moviemasher::shellhelper","moviemasher::source","moviemasher::sqsqueueservice","moviemasher::timerange","moviemasher::transfer","moviemasher::trigger","moviemasher::type","moviemasher::uploadservice","moviemasher::chain#<<()","moviemasher::hashable#[]()","moviemasher::metareader#[]()","moviemasher::hashable#[]=()","moviemasher::s3uploadservice#__bucket_options()","moviemasher::graphutility#__coerce_if_numeric()","moviemasher::chainscaler#__crop_filter()","moviemasher::chainscaler#__crop_or_pad()","moviemasher::layerrawvideo#__filter_trim_input()","moviemasher::defaults::__font_default()","moviemasher::graphutility#__join_commands()","moviemasher::awsinitservice#__lines_in_ini()","moviemasher::defaults::__merger_default()","moviemasher::chainscaler#__min_or_max()","moviemasher::chainscaler#__pad_filter()","moviemasher::sqsqueueservice#__queue_url()","moviemasher::graphutility#__raise_if_empty()","moviemasher::graphutility#__raise_unless()","moviemasher::awshelper#__require_sdk()","moviemasher::defaults::__scaler_default()","moviemasher::destination#__service()","moviemasher::defaults::__string()","moviemasher::transfer#__unless_empty()","moviemasher::asset#__url()","moviemasher::hashable#_get()","moviemasher::metareader#_info()","moviemasher::metareader#_meta()","moviemasher::graphutility#_present()","moviemasher::hashable#_set()","moviemasher::graphmash#add_new_layer()","moviemasher::layertransition#add_new_layer()","moviemasher::path::add_slash_end()","moviemasher::path::add_slash_start()","moviemasher::path::add_slashes()","moviemasher::mash#audio()","moviemasher::metareader#audio()","moviemasher::mash::audio?()","moviemasher::output#audio_bitrate()","moviemasher::output#audio_bitrate=()","moviemasher::output#audio_codec()","moviemasher::output#audio_codec=()","moviemasher::shellhelper::audio_command()","moviemasher::metareader#audio_duration()","moviemasher::input::audio_graphs()","moviemasher::job#audio_graphs()","moviemasher::output#audio_rate()","moviemasher::output#audio_rate=()","moviemasher::asset#av()","moviemasher::output#av()","moviemasher::asset::av_type()","moviemasher::awshelper#aws_configuration()","moviemasher::output#backcolor()","moviemasher::output#backcolor=()","moviemasher::clip#base_source()","moviemasher::input#base_source()","moviemasher::job#base_source()","moviemasher::job#base_source=()","moviemasher::transfer#bucket()","moviemasher::transfer#bucket=()","moviemasher::evaluate::calculator()","moviemasher::job#callbacks()","moviemasher::shellhelper::capture()","moviemasher::chain#chain_command()","moviemasher::chainmodule#chain_command()","moviemasher::chainscaler#chain_command()","moviemasher::chainscaler#chain_command_resize()","moviemasher::chain#chain_labels()","moviemasher::chainblend#chain_labels()","moviemasher::mash::clip_has_audio()","moviemasher::mash::clips_having_audio()","moviemasher::mash::clips_in_range()","moviemasher::floatutil::cmp()","moviemasher::evaluate::coerce_if_numeric()","moviemasher::graph::color_value()","moviemasher::shellhelper::command()","moviemasher::filterevaluated#command_parameters()","moviemasher::path::concat()","moviemasher::configuration()","moviemasher::service#configuration()","moviemasher::configure()","moviemasher::filequeueservice#configure()","moviemasher::service#configure()","moviemasher::sqsqueueservice#configure()","moviemasher::service::configure_services()","moviemasher::asset::create()","moviemasher::callback::create()","moviemasher::clip::create()","moviemasher::destination::create()","moviemasher::input::create()","moviemasher::job::create()","moviemasher::output::create()","moviemasher::source::create()","moviemasher::transfer::create()","moviemasher::destination::create_if()","moviemasher::source::create_if()","moviemasher::transfer::create_if()","moviemasher::graph#create_layer()","moviemasher::callback#data()","moviemasher::callback#data=()","moviemasher::job#destination()","moviemasher::output#destination()","moviemasher::job#destination=()","moviemasher::output#destination=()","moviemasher::asset#dimensions()","moviemasher::metareader#dimensions()","moviemasher::output#dimensions()","moviemasher::asset#dimensions=()","moviemasher::output#dimensions=()","moviemasher::transfer#directory()","moviemasher::transfer#directory=()","moviemasher::destination#directory_files()","moviemasher::fileuploadservice#directory_files()","moviemasher::uploadservice#directory_files()","moviemasher::transfer#directory_path()","moviemasher::asset#download()","moviemasher::downloadservice#download()","moviemasher::filedownloadservice#download()","moviemasher::httpdownloadservice#download()","moviemasher::s3downloadservice#download()","moviemasher::asset::download_asset()","moviemasher::asset#download_source()","moviemasher::service::downloader()","moviemasher::timerange#dup()","moviemasher::asset#duration()","moviemasher::clip#duration()","moviemasher::graph#duration()","moviemasher::mash::duration()","moviemasher::metareader#duration()","moviemasher::asset#duration=()","moviemasher::clip#duration=()","moviemasher::timerange#end_seconds()","moviemasher::timerange#equals?()","moviemasher::evaluate::equation()","moviemasher::job#error()","moviemasher::job#error=()","moviemasher::asset#error?()","moviemasher::clip#error?()","moviemasher::destination#error?()","moviemasher::job#error?()","moviemasher::output#error?()","moviemasher::transfer#error?()","moviemasher::shellhelper::escape()","moviemasher::shellhelper::execute()","moviemasher::callback#extension()","moviemasher::output#extension()","moviemasher::source#extension()","moviemasher::transfer#extension()","moviemasher::callback#extension=()","moviemasher::output#extension=()","moviemasher::source#extension=()","moviemasher::transfer#extension=()","moviemasher::metareader#ffmpeg()","moviemasher::transfer::file()","moviemasher::output#file_name()","moviemasher::transfer#file_name()","moviemasher::input#fill()","moviemasher::input#fill=()","moviemasher::filter#filter_command()","moviemasher::filterevaluated#filter_command()","moviemasher::filterhash#filter_command()","moviemasher::filtersource#filter_command()","moviemasher::filtersourcecolor#filter_command()","moviemasher::filtersourceraw#filter_command()","moviemasher::filter#filter_name()","moviemasher::filtersourcecolor#filter_name()","moviemasher::filtersourceraw#filter_name()","moviemasher::output#forecolor()","moviemasher::output#forecolor=()","moviemasher::metareader#fps()","moviemasher::transfer#full_path()","moviemasher::asset#gain()","moviemasher::asset#gain=()","moviemasher::mash::gain_changes()","moviemasher::info::get()","moviemasher::goodbye()","moviemasher::graph#graph_command()","moviemasher::graphmash#graph_command()","moviemasher::graphraw#graph_command()","moviemasher::graph#graph_scope()","moviemasher::floatutil::gtr()","moviemasher::floatutil::gtre()","moviemasher::mash::hash?()","moviemasher::hello()","moviemasher::transfer#host()","moviemasher::transfer#host=()","moviemasher::metareader#http()","moviemasher::job#id()","moviemasher::av::includes?()","moviemasher::awsinitservice#init()","moviemasher::azureinitservice#init()","moviemasher::initservice#init()","moviemasher::mash::init_av_input()","moviemasher::callback::init_hash()","moviemasher::destination::init_hash()","moviemasher::input::init_hash()","moviemasher::job::init_hash()","moviemasher::mash::init_hash()","moviemasher::output::init_hash()","moviemasher::source::init_hash()","moviemasher::transfer::init_hash()","moviemasher::mash::init_input()","moviemasher::mash::init_mash_input()","moviemasher::source::init_string()","moviemasher::service::initer()","moviemasher::layer#initialize_chains()","moviemasher::layerrawimage#initialize_chains()","moviemasher::layerrawvideo#initialize_chains()","moviemasher::layertheme#initialize_chains()","moviemasher::layertransition#initialize_chains()","moviemasher::chain#initialize_filters()","moviemasher::chaineffects#initialize_filters()","moviemasher::chainmodule#initialize_filters()","moviemasher::chainoverlay#initialize_filters()","moviemasher::timerange::input_length()","moviemasher::chainmodule#input_scope()","moviemasher::timerange::input_time()","moviemasher::timerange::input_trim()","moviemasher::timerange::input_trim_range()","moviemasher::filtersourceimage#inputs()","moviemasher::filtersourcevideo#inputs()","moviemasher::graph#inputs()","moviemasher::graphmash#inputs()","moviemasher::graphraw#inputs()","moviemasher::job#inputs()","moviemasher::layer#inputs()","moviemasher::layercolor#inputs()","moviemasher::layerraw#inputs()","moviemasher::layertransition#inputs()","moviemasher::service::instance()","moviemasher::timerange#intersection()","moviemasher::hashable#keys()","moviemasher::layer#layer_command()","moviemasher::layercolor#layer_command()","moviemasher::layerraw#layer_command()","moviemasher::layerrawimage#layer_command()","moviemasher::layerrawvideo#layer_command()","moviemasher::layertransition#layer_command()","moviemasher::layer#layer_scope()","moviemasher::layermodule#layer_scope()","moviemasher::asset#length()","moviemasher::clip#length()","moviemasher::input#length()","moviemasher::asset#length=()","moviemasher::clip#length=()","moviemasher::input#length=()","moviemasher::timerange#length_seconds()","moviemasher::floatutil::less()","moviemasher::job#log()","moviemasher::job#log_entry()","moviemasher::asset#loop()","moviemasher::clip#loop()","moviemasher::asset#loop=()","moviemasher::clip#loop=()","moviemasher::input#mash()","moviemasher::input#mash=()","moviemasher::floatutil::max()","moviemasher::mash#media()","moviemasher::mash::media()","moviemasher::mash::media_count_for_clips()","moviemasher::mash::media_search()","moviemasher::av::merge()","moviemasher::layer#merger_command()","moviemasher::error::runtime#message()","moviemasher::info::meta_path()","moviemasher::asset#metadata()","moviemasher::output#metadata()","moviemasher::transfer#method()","moviemasher::transfer#method=()","moviemasher::floatutil::min()","moviemasher::filterhelpers::mm_cmp()","moviemasher::filterhelpers::mm_dir_horz()","moviemasher::filterhelpers::mm_dir_vert()","moviemasher::filterhelpers::mm_fontfamily()","moviemasher::filterhelpers::mm_fontfile()","moviemasher::filterhelpers::mm_horz()","moviemasher::filterhelpers::mm_max()","moviemasher::filterhelpers::mm_min()","moviemasher::filterhelpers::mm_paren()","moviemasher::filterhelpers::mm_textfile()","moviemasher::filterhelpers::mm_vert()","moviemasher::defaults::module_for_type()","moviemasher::clip#module_source()","moviemasher::input#module_source()","moviemasher::job#module_source()","moviemasher::job#module_source=()","moviemasher::callback#name()","moviemasher::output#name()","moviemasher::source#name()","moviemasher::transfer#name()","moviemasher::callback#name=()","moviemasher::output#name=()","moviemasher::source#name=()","moviemasher::transfer#name=()","moviemasher::chain::new()","moviemasher::chainmodule::new()","moviemasher::chainoverlay::new()","moviemasher::chainscaler::new()","moviemasher::error::jobrender::new()","moviemasher::error::runtime::new()","moviemasher::filter::new()","moviemasher::filterevaluated::new()","moviemasher::filterhash::new()","moviemasher::filtersetpts::new()","moviemasher::filtersource::new()","moviemasher::filtersourcecolor::new()","moviemasher::filtersourceraw::new()","moviemasher::graph::new()","moviemasher::graphmash::new()","moviemasher::graphraw::new()","moviemasher::hashable::new()","moviemasher::input::new()","moviemasher::job::new()","moviemasher::layer::new()","moviemasher::layercolor::new()","moviemasher::layertransition::new()","moviemasher::mash::new()","moviemasher::metareader::new()","moviemasher::output::new()","moviemasher::source::new()","moviemasher::sqsqueueservice::new()","moviemasher::timerange::new()","moviemasher::transfer::new()","moviemasher::asset#no_audio()","moviemasher::output#no_audio()","moviemasher::asset#no_audio=()","moviemasher::output#no_audio=()","moviemasher::asset#no_video()","moviemasher::asset#no_video=()","moviemasher::floatutil::nonzero()","moviemasher::evaluate::object()","moviemasher::asset#offset()","moviemasher::input#offset()","moviemasher::asset#offset=()","moviemasher::input#offset=()","moviemasher::shellhelper::output_command()","moviemasher::job#output_path()","moviemasher::job#outputs()","moviemasher::job#outputs_desire()","moviemasher::transfer#parameters()","moviemasher::transfer#parameters=()","moviemasher::info::parse()","moviemasher::transfer#pass()","moviemasher::transfer#pass=()","moviemasher::output#path()","moviemasher::transfer#path()","moviemasher::output#path=()","moviemasher::transfer#path=()","moviemasher::transfer#port()","moviemasher::transfer#port=()","moviemasher::floatutil::precision()","moviemasher::output#precision()","moviemasher::output#precision=()","moviemasher::awshelper#prefixed_configuration()","moviemasher::asset#preflight()","moviemasher::input#preflight()","moviemasher::job#preflight()","moviemasher::mash#preflight()","moviemasher::output#preflight()","moviemasher::process()","moviemasher::job#process()","moviemasher::process_jobs()","moviemasher::process_queues()","moviemasher::job#progress()","moviemasher::callback#progress_seconds()","moviemasher::callback#progress_seconds=()","moviemasher::output#quality()","moviemasher::output#quality=()","moviemasher::transfer::query_string()","moviemasher::sqsqueueservice#queue_url()","moviemasher::service::queues()","moviemasher::shellhelper::raise_unless_rendered()","moviemasher::layer#range()","moviemasher::layercolor#range()","moviemasher::filequeueservice#receive_job()","moviemasher::queueservice#receive_job()","moviemasher::sqsqueueservice#receive_job()","moviemasher::transfer#region()","moviemasher::transfer#region=()","moviemasher::transfer#relative?()","moviemasher::job#render_path()","moviemasher::output#required()","moviemasher::output#required=()","moviemasher::hashable::resolved_hash()","moviemasher::filterhelpers::rgb()","moviemasher::filterhelpers::rgba()","moviemasher::awshelper#s3_client()","moviemasher::awshelper#s3_configuration()","moviemasher::awshelper#s3_resource()","moviemasher::filehelper::safe_path()","moviemasher::filterevaluated#scope_value()","moviemasher::httpdownloadservice#secure()","moviemasher::httpuploadservice#secure()","moviemasher::httpsdownloadservice#secure()","moviemasher::httpsuploadservice#secure()","moviemasher::output::sequence_complete()","moviemasher::service::services()","moviemasher::info::set()","moviemasher::info::set_if()","moviemasher::shellhelper::set_output_commands()","moviemasher::hashable#slice()","moviemasher::floatutil::sort()","moviemasher::asset#source()","moviemasher::asset#source=()","moviemasher::metareader#sox()","moviemasher::awshelper#sqs_client()","moviemasher::awshelper#sqs_configuration()","moviemasher::clip#start()","moviemasher::input#start()","moviemasher::clip#start=()","moviemasher::input#start=()","moviemasher::timerange#start_seconds()","moviemasher::timerange#stop()","moviemasher::floatutil::string()","moviemasher::path::strip_slash_end()","moviemasher::path::strip_slash_start()","moviemasher::path::strip_slashes()","moviemasher::shellhelper::switch()","moviemasher::hashable::symbolize()","moviemasher::timerange#synchronize()","moviemasher::hashable#to_hash()","moviemasher::hashable#to_json()","moviemasher::error::runtime#to_s()","moviemasher::hashable#to_s()","moviemasher::callback#trigger()","moviemasher::callback#trigger=()","moviemasher::layer#trim_command()","moviemasher::layercolor#trim_command()","moviemasher::asset#type()","moviemasher::info::type()","moviemasher::metareader#type()","moviemasher::output#type()","moviemasher::transfer#type()","moviemasher::asset#type=()","moviemasher::output#type=()","moviemasher::transfer#type=()","moviemasher::timerange::update()","moviemasher::timerange::update_inputs()","moviemasher::timerange::update_outputs()","moviemasher::destination#upload()","moviemasher::fileuploadservice#upload()","moviemasher::httpuploadservice#upload()","moviemasher::s3uploadservice#upload()","moviemasher::uploadservice#upload()","moviemasher::service::uploader()","moviemasher::asset#url()","moviemasher::transfer#url()","moviemasher::mash#url_count()","moviemasher::asset::url_path()","moviemasher::transfer#user()","moviemasher::transfer#user=()","moviemasher::evaluate::value()","moviemasher::hashable#values()","moviemasher::mash#video()","moviemasher::mash::video?()","moviemasher::output#video_bitrate()","moviemasher::output#video_bitrate=()","moviemasher::output#video_codec()","moviemasher::output#video_codec=()","moviemasher::metareader#video_duration()","moviemasher::output#video_format()","moviemasher::output#video_format=()","moviemasher::input::video_graphs()","moviemasher::job#video_graphs()","moviemasher::mash::video_ranges()","moviemasher::output#video_rate()","moviemasher::output#video_rate=()","","",""],"info":[["MovieMasher","","MovieMasher.html","","<p>Handles global configuration and high level processing of Job objects. The ::process_queues method will …\n"],["MovieMasher::AV","","MovieMasher/AV.html","","<p>potential combinations of audio and video\n"],["MovieMasher::Asset","","MovieMasher/Asset.html","","<p>represents a downloadable media asset\n"],["MovieMasher::AwsHelper","","MovieMasher/AwsHelper.html","","<p>included by all aws service instances\n"],["MovieMasher::AwsInitService","","MovieMasher/AwsInitService.html","","<p>initializes aws service\n"],["MovieMasher::AzureInitService","","MovieMasher/AzureInitService.html","","<p>initializes azure service\n"],["MovieMasher::Callback","","MovieMasher/Callback.html","","<p>A Transfer object and element in Job#callbacks representing a remote request triggered at a particular …\n"],["MovieMasher::Chain","","MovieMasher/Chain.html","","<p>base for all filter chains\n"],["MovieMasher::ChainBlend","","MovieMasher/ChainBlend.html","","<p>a merger chain supporting blend filter\n"],["MovieMasher::ChainEffects","","MovieMasher/ChainEffects.html","","<p>a chain of effects\n"],["MovieMasher::ChainModule","","MovieMasher/ChainModule.html","","<p>a theme or transition filter chain\n"],["MovieMasher::ChainOverlay","","MovieMasher/ChainOverlay.html","","<p>an overlay filter chain\n"],["MovieMasher::ChainScaler","","MovieMasher/ChainScaler.html","","<p>a scaler filter chain\n"],["MovieMasher::Clip","","MovieMasher/Clip.html","","<p>represents a clip in a mash\n"],["MovieMasher::Defaults","","MovieMasher/Defaults.html","","<p>default scaler, merger and font\n"],["MovieMasher::Destination","","MovieMasher/Destination.html","","<p>A Transfer object used as Job#destination or Output#destination representing a remote host ready to accept …\n"],["MovieMasher::DownloadService","","MovieMasher/DownloadService.html","","<p>base class for downloader service\n"],["MovieMasher::Error","","MovieMasher/Error.html","",""],["MovieMasher::Error::Configuration","","MovieMasher/Error/Configuration.html","",""],["MovieMasher::Error::Critical","","MovieMasher/Error/Critical.html","","<p>serious code errors\n"],["MovieMasher::Error::Job","","MovieMasher/Error/Job.html","","<p>job related errors\n"],["MovieMasher::Error::JobInput","","MovieMasher/Error/JobInput.html","",""],["MovieMasher::Error::JobOutput","","MovieMasher/Error/JobOutput.html","",""],["MovieMasher::Error::JobRender","","MovieMasher/Error/JobRender.html","","<p>a problem rendering output\n"],["MovieMasher::Error::JobSource","","MovieMasher/Error/JobSource.html","",""],["MovieMasher::Error::JobSyntax","","MovieMasher/Error/JobSyntax.html","",""],["MovieMasher::Error::JobUpload","","MovieMasher/Error/JobUpload.html","",""],["MovieMasher::Error::Object","","MovieMasher/Error/Object.html","",""],["MovieMasher::Error::Parameter","","MovieMasher/Error/Parameter.html","",""],["MovieMasher::Error::Runtime","","MovieMasher/Error/Runtime.html","","<p>base error\n"],["MovieMasher::Error::State","","MovieMasher/Error/State.html","",""],["MovieMasher::Error::Todo","","MovieMasher/Error/Todo.html","",""],["MovieMasher::Evaluate","","MovieMasher/Evaluate.html","","<p>evaluates certain simple expressions\n"],["MovieMasher::FileDownloadService","","MovieMasher/FileDownloadService.html","","<p>&#39;downloads&#39; assets via local file system\n"],["MovieMasher::FileHelper","","MovieMasher/FileHelper.html","","<p>makes directories and sets permissions based on config\n"],["MovieMasher::FileQueueService","","MovieMasher/FileQueueService.html","","<p>reads queue from local file system\n"],["MovieMasher::FileUploadService","","MovieMasher/FileUploadService.html","","<p>&#39;uploads&#39; within the local file system\n"],["MovieMasher::Fill","","MovieMasher/Fill.html","","<p>fill modes for bounds scaling\n"],["MovieMasher::Filter","","MovieMasher/Filter.html","","<p>base for all filters\n"],["MovieMasher::FilterEvaluated","","MovieMasher/FilterEvaluated.html","","<p>module filter\n"],["MovieMasher::FilterHash","","MovieMasher/FilterHash.html","","<p>simplest filter\n"],["MovieMasher::FilterHelpers","","MovieMasher/FilterHelpers.html","","<p>helpers used by filter objects\n"],["MovieMasher::FilterSetpts","","MovieMasher/FilterSetpts.html","","<p>simple setpts defaults to PTS-STARTPTS\n"],["MovieMasher::FilterSource","","MovieMasher/FilterSource.html","","<p>base filter source\n"],["MovieMasher::FilterSourceColor","","MovieMasher/FilterSourceColor.html","","<p>simple color source\n"],["MovieMasher::FilterSourceImage","","MovieMasher/FilterSourceImage.html","","<p>image source\n"],["MovieMasher::FilterSourceRaw","","MovieMasher/FilterSourceRaw.html","","<p>base raw source\n"],["MovieMasher::FilterSourceVideo","","MovieMasher/FilterSourceVideo.html","","<p>video source\n"],["MovieMasher::FloatUtil","","MovieMasher/FloatUtil.html","","<p>comparison of floats\n"],["MovieMasher::Gain","","MovieMasher/Gain.html","",""],["MovieMasher::Graph","","MovieMasher/Graph.html","","<p>top level interface\n"],["MovieMasher::GraphMash","","MovieMasher/GraphMash.html","","<p>a mash represented as a graph\n"],["MovieMasher::GraphRaw","","MovieMasher/GraphRaw.html","","<p>a video or image represented as a graph\n"],["MovieMasher::GraphUtility","","MovieMasher/GraphUtility.html","","<p>base class for most other graph related classes\n"],["MovieMasher::Hashable","","MovieMasher/Hashable.html","","<p>Base class for mocking a Hash.\n"],["MovieMasher::HttpDownloadService","","MovieMasher/HttpDownloadService.html","","<p>downloads assets via http\n"],["MovieMasher::HttpUploadService","","MovieMasher/HttpUploadService.html","","<p>uploads via http\n"],["MovieMasher::HttpsDownloadService","","MovieMasher/HttpsDownloadService.html","","<p>downloads assets via http securely\n"],["MovieMasher::HttpsUploadService","","MovieMasher/HttpsUploadService.html","","<p>uploads via http securely\n"],["MovieMasher::Info","","MovieMasher/Info.html","","<p>get and set meta information about a file\n"],["MovieMasher::InitService","","MovieMasher/InitService.html","","<p>base class for init service\n"],["MovieMasher::Input","","MovieMasher/Input.html","","<p>An element in Job#inputs representing media to be included in the mashup, which is eventually rendered …\n"],["MovieMasher::Intermediate","","MovieMasher/Intermediate.html","","<p>ffmpeg formats for intermediate build files\n"],["MovieMasher::Job","","MovieMasher/Job.html","","<p>Represents a single transcoding operation. Once #process is called all of the job&#39;s #inputs are downloaded …\n"],["MovieMasher::Layer","","MovieMasher/Layer.html","","<p>base for all layers all layers - LayerRaw, LayerModule\n"],["MovieMasher::LayerColor","","MovieMasher/LayerColor.html","","<p>a background color layer\n"],["MovieMasher::LayerModule","","MovieMasher/LayerModule.html","","<p>base class for a theme or transition layer LayerTheme, LayerTransition\n"],["MovieMasher::LayerRaw","","MovieMasher/LayerRaw.html","","<p>base class for a video or image layer LayerRawVideo, LayerRawImage\n"],["MovieMasher::LayerRawImage","","MovieMasher/LayerRawImage.html","","<p>a raw image layer\n"],["MovieMasher::LayerRawVideo","","MovieMasher/LayerRawVideo.html","","<p>a raw video layer\n"],["MovieMasher::LayerTheme","","MovieMasher/LayerTheme.html","","<p>a theme layer\n"],["MovieMasher::LayerTransition","","MovieMasher/LayerTransition.html","","<p>a transition layer\n"],["MovieMasher::Mash","","MovieMasher/Mash.html","","<p>Input#source of mash inputs, representing a collection #media arranged on #audio and #video tracks.\n"],["MovieMasher::MetaReader","","MovieMasher/MetaReader.html","","<p>used to parse file&#39;s meta data\n"],["MovieMasher::Method","","MovieMasher/Method.html","","<p>transfer methods\n"],["MovieMasher::Output","","MovieMasher/Output.html","","<p>Represents a single rendered version of the mashup, including all formatting parameters and quality settings. …\n"],["MovieMasher::Parameters","","MovieMasher/Parameters.html","","<p>default filter parameters\n"],["MovieMasher::Path","","MovieMasher/Path.html","","<p>add and strip slashes from start and/or end of string\n"],["MovieMasher::QueueService","","MovieMasher/QueueService.html","","<p>base class for queue service\n"],["MovieMasher::S3DownloadService","","MovieMasher/S3DownloadService.html","","<p>downloads assets via s3\n"],["MovieMasher::S3UploadService","","MovieMasher/S3UploadService.html","","<p>handles upload to S3\n"],["MovieMasher::Service","","MovieMasher/Service.html","","<p>abstraction layer for initing, upload, download, queue services\n"],["MovieMasher::ShellHelper","","MovieMasher/ShellHelper.html","","<p>executes commands and optionally checks created files for duration\n"],["MovieMasher::Source","","MovieMasher/Source.html","","<p>A Transfer object used for Input#source and Media#source, describing how to retrieve an audio, image, …\n"],["MovieMasher::SqsQueueService","","MovieMasher/SqsQueueService.html","","<p>reads queue from sqs\n"],["MovieMasher::TimeRange","","MovieMasher/TimeRange.html","","<p>a time span at a rate\n"],["MovieMasher::Transfer","","MovieMasher/Transfer.html","","<p>Base class for Callback and Source as well as used directly to resolve Input and Output relative paths …\n"],["MovieMasher::Trigger","","MovieMasher/Trigger.html","","<p>callback types\n"],["MovieMasher::Type","","MovieMasher/Type.html","","<p>input, output and transfer types\n"],["MovieMasher::UploadService","","MovieMasher/UploadService.html","","<p>base class for uploader service\n"],["<<","MovieMasher::Chain","MovieMasher/Chain.html#method-i-3C-3C","(filter)",""],["[]","MovieMasher::Hashable","MovieMasher/Hashable.html#method-i-5B-5D","(symbol)","<p>Convenience getter for underlying data Hash.\n<p>symbol &mdash; Symbol key into hash.\n\n<p>Returns\n"],["[]","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-5B-5D","(symbol)",""],["[]=","MovieMasher::Hashable","MovieMasher/Hashable.html#method-i-5B-5D-3D","(symbol, value)","<p>Convenience setter for underlying data Hash.\n<p>symbol &mdash; Symbol key into hash.\n<p>value &mdash; Object to set at key.\n"],["__bucket_options","MovieMasher::S3UploadService","MovieMasher/S3UploadService.html#method-i-__bucket_options","(options)",""],["__coerce_if_numeric","MovieMasher::GraphUtility","MovieMasher/GraphUtility.html#method-i-__coerce_if_numeric","(value)",""],["__crop_filter","MovieMasher::ChainScaler","MovieMasher/ChainScaler.html#method-i-__crop_filter","(w_scaled, h_scaled, orig_w_f, orig_h_f)",""],["__crop_or_pad","MovieMasher::ChainScaler","MovieMasher/ChainScaler.html#method-i-__crop_or_pad","(gtr, w_scaled, h_scaled, orig_w_f, orig_h_f)",""],["__filter_trim_input","MovieMasher::LayerRawVideo","MovieMasher/LayerRawVideo.html#method-i-__filter_trim_input","()",""],["__font_default","MovieMasher::Defaults","MovieMasher/Defaults.html#method-c-__font_default","()",""],["__join_commands","MovieMasher::GraphUtility","MovieMasher/GraphUtility.html#method-i-__join_commands","(cmds)",""],["__lines_in_ini","MovieMasher::AwsInitService","MovieMasher/AwsInitService.html#method-i-__lines_in_ini","(result)",""],["__merger_default","MovieMasher::Defaults","MovieMasher/Defaults.html#method-c-__merger_default","()",""],["__min_or_max","MovieMasher::ChainScaler","MovieMasher/ChainScaler.html#method-i-__min_or_max","(fill_is_scale, ratio_h, ratio_w)",""],["__pad_filter","MovieMasher::ChainScaler","MovieMasher/ChainScaler.html#method-i-__pad_filter","(w_scaled, h_scaled, orig_w_f, orig_h_f)",""],["__queue_url","MovieMasher::SqsQueueService","MovieMasher/SqsQueueService.html#method-i-__queue_url","()",""],["__raise_if_empty","MovieMasher::GraphUtility","MovieMasher/GraphUtility.html#method-i-__raise_if_empty","(string, msg)",""],["__raise_unless","MovieMasher::GraphUtility","MovieMasher/GraphUtility.html#method-i-__raise_unless","(boolean, msg)",""],["__require_sdk","MovieMasher::AwsHelper","MovieMasher/AwsHelper.html#method-i-__require_sdk","()",""],["__scaler_default","MovieMasher::Defaults","MovieMasher/Defaults.html#method-c-__scaler_default","()",""],["__service","MovieMasher::Destination","MovieMasher/Destination.html#method-i-__service","()",""],["__string","MovieMasher::Defaults","MovieMasher/Defaults.html#method-c-__string","(type)",""],["__unless_empty","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-__unless_empty","(could_be_empty, string)",""],["__url","MovieMasher::Asset","MovieMasher/Asset.html#method-i-__url","(type, base_url, path)",""],["_get","MovieMasher::Hashable","MovieMasher/Hashable.html#method-i-_get","(symbol)",""],["_info","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-_info","()",""],["_meta","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-_meta","(symbol)",""],["_present","MovieMasher::GraphUtility","MovieMasher/GraphUtility.html#method-i-_present","(thing)",""],["_set","MovieMasher::Hashable","MovieMasher/Hashable.html#method-i-_set","(symbol, value)",""],["add_new_layer","MovieMasher::GraphMash","MovieMasher/GraphMash.html#method-i-add_new_layer","(input)",""],["add_new_layer","MovieMasher::LayerTransition","MovieMasher/LayerTransition.html#method-i-add_new_layer","(clip)",""],["add_slash_end","MovieMasher::Path","MovieMasher/Path.html#method-c-add_slash_end","(string)",""],["add_slash_start","MovieMasher::Path","MovieMasher/Path.html#method-c-add_slash_start","(string)",""],["add_slashes","MovieMasher::Path","MovieMasher/Path.html#method-c-add_slashes","(string)",""],["audio","MovieMasher::Mash","MovieMasher/Mash.html#method-i-audio","()","<p>Array &mdash; One or more Track objects.\n\n"],["audio","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-audio","()",""],["audio?","MovieMasher::Mash","MovieMasher/Mash.html#method-c-audio-3F","(mash)",""],["audio_bitrate","MovieMasher::Output","MovieMasher/Output.html#method-i-audio_bitrate","()",""],["audio_bitrate=","MovieMasher::Output","MovieMasher/Output.html#method-i-audio_bitrate-3D","(value)","<p>String &mdash; FFmpeg -b:a switch, placed before #audio_rate.\n<p>Integer &mdash; The character &#39;k&#39; will be appended. …\n"],["audio_codec","MovieMasher::Output","MovieMasher/Output.html#method-i-audio_codec","()",""],["audio_codec=","MovieMasher::Output","MovieMasher/Output.html#method-i-audio_codec-3D","(value)","<p>String &mdash; FFmpeg -c:a switch, placed after #audio_rate.\n<p>Default &mdash; aac -strict experimental\n<p>Types &mdash; Type::AUDIO …\n"],["audio_command","MovieMasher::ShellHelper","MovieMasher/ShellHelper.html#method-c-audio_command","(path)",""],["audio_duration","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-audio_duration","()",""],["audio_graphs","MovieMasher::Input","MovieMasher/Input.html#method-c-audio_graphs","(inputs)",""],["audio_graphs","MovieMasher::Job","MovieMasher/Job.html#method-i-audio_graphs","()",""],["audio_rate","MovieMasher::Output","MovieMasher/Output.html#method-i-audio_rate","()",""],["audio_rate=","MovieMasher::Output","MovieMasher/Output.html#method-i-audio_rate-3D","(value)","<p>String &mdash; FFmpeg -r:a switch, placed between #audio_bitrate &amp; #audio_codec.\n<p>Default &mdash; 44_100\n<p>Types &mdash; Type::AUDIO …\n"],["av","MovieMasher::Asset","MovieMasher/Asset.html#method-i-av","()","<p>String &mdash; The AV type.\n<p>Constant &mdash; AV::AUDIO_ONLY, AV::VIDEO_ONLY, AV::BOTH, or AV::NEITHER if an error was …\n"],["av","MovieMasher::Output","MovieMasher/Output.html#method-i-av","()","<p>String &mdash; The AV type.\n<p>Constant &mdash; AV::AUDIO_ONLY, AV::VIDEO_ONLY or AV::BOTH.\n<p>Default &mdash; Based on #type and #no_audio …\n"],["av_type","MovieMasher::Asset","MovieMasher/Asset.html#method-c-av_type","(input)","<p>Returns\n<p>Returns a new instance.\n"],["aws_configuration","MovieMasher::AwsHelper","MovieMasher/AwsHelper.html#method-i-aws_configuration","()",""],["backcolor","MovieMasher::Output","MovieMasher/Output.html#method-i-backcolor","()",""],["backcolor=","MovieMasher::Output","MovieMasher/Output.html#method-i-backcolor-3D","(value)","<p>String &mdash; Six character hex, rgb(0,0,0) or standard color name.\n<p>Default &mdash; FFFFFF for Type::WAVEFORM, black …\n"],["base_source","MovieMasher::Clip","MovieMasher/Clip.html#method-i-base_source","()","<p>Transfer &mdash; Resolves relative URLs.\n<p>Default &mdash; Job#base_source\n<p>Types &mdash; Just Type::MASH.\n"],["base_source","MovieMasher::Input","MovieMasher/Input.html#method-i-base_source","()","<p>Transfer &mdash; Resolves relative URLs.\n<p>Default &mdash; Job#base_source\n<p>Types &mdash; Just Type::MASH.\n"],["base_source","MovieMasher::Job","MovieMasher/Job.html#method-i-base_source","()",""],["base_source=","MovieMasher::Job","MovieMasher/Job.html#method-i-base_source-3D","(value)","<p>Transfer &mdash; Resolves relative paths within Input#source and Media#source String values.\n\n"],["bucket","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-bucket","()",""],["bucket=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-bucket-3D","(value)","<p>String &mdash; Name of AWS S3 bucket where file is stored.\n<p>Types &mdash; Just Type::S3.\n\n"],["calculator","MovieMasher::Evaluate","MovieMasher/Evaluate.html#method-c-calculator","()",""],["callbacks","MovieMasher::Job","MovieMasher/Job.html#method-i-callbacks","()","<p>Array &mdash; Zero or more Callback objects.\n\n"],["capture","MovieMasher::ShellHelper","MovieMasher/ShellHelper.html#method-c-capture","(cmd)",""],["chain_command","MovieMasher::Chain","MovieMasher/Chain.html#method-i-chain_command","(scope)",""],["chain_command","MovieMasher::ChainModule","MovieMasher/ChainModule.html#method-i-chain_command","(scope)",""],["chain_command","MovieMasher::ChainScaler","MovieMasher/ChainScaler.html#method-i-chain_command","(scope)",""],["chain_command_resize","MovieMasher::ChainScaler","MovieMasher/ChainScaler.html#method-i-chain_command_resize","(orig_dims, target_dims)",""],["chain_labels","MovieMasher::Chain","MovieMasher/Chain.html#method-i-chain_labels","(label, index)",""],["chain_labels","MovieMasher::ChainBlend","MovieMasher/ChainBlend.html#method-i-chain_labels","(label, index)",""],["clip_has_audio","MovieMasher::Mash","MovieMasher/Mash.html#method-c-clip_has_audio","(clip)",""],["clips_having_audio","MovieMasher::Mash","MovieMasher/Mash.html#method-c-clips_having_audio","(mash)",""],["clips_in_range","MovieMasher::Mash","MovieMasher/Mash.html#method-c-clips_in_range","(mash, range, track_type)",""],["cmp","MovieMasher::FloatUtil","MovieMasher/FloatUtil.html#method-c-cmp","(float1, float2, digits = 3)","<p>are 2 floats equal\n"],["coerce_if_numeric","MovieMasher::Evaluate","MovieMasher/Evaluate.html#method-c-coerce_if_numeric","(value)",""],["color_value","MovieMasher::Graph","MovieMasher/Graph.html#method-c-color_value","(color)",""],["command","MovieMasher::ShellHelper","MovieMasher/ShellHelper.html#method-c-command","(options)",""],["command_parameters","MovieMasher::FilterEvaluated","MovieMasher/FilterEvaluated.html#method-i-command_parameters","(scope)",""],["concat","MovieMasher::Path","MovieMasher/Path.html#method-c-concat","(string1, string2)",""],["configuration","MovieMasher","MovieMasher.html#method-c-configuration","()","<p>Returns\n<p>Returns the configuration Hash with Symbol keys.\n"],["configuration","MovieMasher::Service","MovieMasher/Service.html#method-i-configuration","()",""],["configure","MovieMasher","MovieMasher.html#method-c-configure","(hash_or_path = nil)","<p>hash_or_path &mdash; Set one or more configuration options. If supplied a String, it&#39;s assumed to be a path …\n\n"],["configure","MovieMasher::FileQueueService","MovieMasher/FileQueueService.html#method-i-configure","(config)",""],["configure","MovieMasher::Service","MovieMasher/Service.html#method-i-configure","(*)",""],["configure","MovieMasher::SqsQueueService","MovieMasher/SqsQueueService.html#method-i-configure","(config)",""],["configure_services","MovieMasher::Service","MovieMasher/Service.html#method-c-configure_services","(config)",""],["create","MovieMasher::Asset","MovieMasher/Asset.html#method-c-create","(hash = nil)",""],["create","MovieMasher::Callback","MovieMasher/Callback.html#method-c-create","(hash = nil)","<p>Returns\n<p>Returns a new instance.\n"],["create","MovieMasher::Clip","MovieMasher/Clip.html#method-c-create","(hash = nil)","<p>Returns\n<p>Returns a new instance.\n"],["create","MovieMasher::Destination","MovieMasher/Destination.html#method-c-create","(hash = nil)","<p>Returns\n<p>Returns a new instance.\n"],["create","MovieMasher::Input","MovieMasher/Input.html#method-c-create","(hash = nil)","<p>Returns\n<p>Returns a new instance.\n"],["create","MovieMasher::Job","MovieMasher/Job.html#method-c-create","(hash = nil)",""],["create","MovieMasher::Output","MovieMasher/Output.html#method-c-create","(hash = nil)","<p>Returns\n<p>Returns a new instance.\n"],["create","MovieMasher::Source","MovieMasher/Source.html#method-c-create","(hash = nil)","<p>Returns\n<p>Returns a new instance.\n"],["create","MovieMasher::Transfer","MovieMasher/Transfer.html#method-c-create","(hash = nil)","<p>Returns\n<p>Returns a new instance.\n"],["create_if","MovieMasher::Destination","MovieMasher/Destination.html#method-c-create_if","(hash)",""],["create_if","MovieMasher::Source","MovieMasher/Source.html#method-c-create_if","(hash)",""],["create_if","MovieMasher::Transfer","MovieMasher/Transfer.html#method-c-create_if","(hash)",""],["create_layer","MovieMasher::Graph","MovieMasher/Graph.html#method-i-create_layer","(input)",""],["data","MovieMasher::Callback","MovieMasher/Callback.html#method-i-data","()",""],["data=","MovieMasher::Callback","MovieMasher/Callback.html#method-i-data-3D","(value)","<p>Hash/Array - Values to recursively evaluate and parse into request body.\n<p>Default &mdash; nil\n\n"],["destination","MovieMasher::Job","MovieMasher/Job.html#method-i-destination","()",""],["destination","MovieMasher::Output","MovieMasher/Output.html#method-i-destination","()",""],["destination=","MovieMasher::Job","MovieMasher/Job.html#method-i-destination-3D","(value)","<p>Destination &mdash; Shared by all Output objects that haven&#39;t one of their own.\n\n"],["destination=","MovieMasher::Output","MovieMasher/Output.html#method-i-destination-3D","(value)","<p>Transfer &mdash; Describes where to upload this output.\n<p>Default &mdash; Job#destination\n\n"],["dimensions","MovieMasher::Asset","MovieMasher/Asset.html#method-i-dimensions","()",""],["dimensions","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-dimensions","()",""],["dimensions","MovieMasher::Output","MovieMasher/Output.html#method-i-dimensions","()",""],["dimensions=","MovieMasher::Asset","MovieMasher/Asset.html#method-i-dimensions-3D","(value)","<p>String &mdash; WIDTHxHEIGHT of element.\n<p>Default &mdash; Probed from downloaded.\n<p>Types &mdash; Type::IMAGE and Type::VIDEO.\n"],["dimensions=","MovieMasher::Output","MovieMasher/Output.html#method-i-dimensions-3D","(value)","<p>String &mdash; Output pixel size formatted as WIDTHxHEIGHT.\n<p>Default &mdash; 512x288 for Type::VIDEO, 8000x32 for Type::WAVEFORM …\n"],["directory","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-directory","()",""],["directory=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-directory-3D","(value)","<p>String &mdash; Added to URL after #directory, before #name, slashed.\n<p>Default &mdash; Nil means do not add to URL.\n<p>Types … &mdash; "],["directory_files","MovieMasher::Destination","MovieMasher/Destination.html#method-i-directory_files","(file)",""],["directory_files","MovieMasher::FileUploadService","MovieMasher/FileUploadService.html#method-i-directory_files","(path)",""],["directory_files","MovieMasher::UploadService","MovieMasher/UploadService.html#method-i-directory_files","(file)",""],["directory_path","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-directory_path","()",""],["download","MovieMasher::Asset","MovieMasher/Asset.html#method-i-download","(options)",""],["download","MovieMasher::DownloadService","MovieMasher/DownloadService.html#method-i-download","(*)",""],["download","MovieMasher::FileDownloadService","MovieMasher/FileDownloadService.html#method-i-download","(options)",""],["download","MovieMasher::HttpDownloadService","MovieMasher/HttpDownloadService.html#method-i-download","(options)",""],["download","MovieMasher::S3DownloadService","MovieMasher/S3DownloadService.html#method-i-download","(options)",""],["download_asset","MovieMasher::Asset","MovieMasher/Asset.html#method-c-download_asset","(asset, job)",""],["download_source","MovieMasher::Asset","MovieMasher/Asset.html#method-i-download_source","()",""],["downloader","MovieMasher::Service","MovieMasher/Service.html#method-c-downloader","(type)",""],["dup","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-i-dup","()",""],["duration","MovieMasher::Asset","MovieMasher/Asset.html#method-i-duration","()",""],["duration","MovieMasher::Clip","MovieMasher/Clip.html#method-i-duration","()",""],["duration","MovieMasher::Graph","MovieMasher/Graph.html#method-i-duration","()",""],["duration","MovieMasher::Mash","MovieMasher/Mash.html#method-c-duration","(mash)",""],["duration","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-duration","()",""],["duration=","MovieMasher::Asset","MovieMasher/Asset.html#method-i-duration-3D","(value)","<p>Float &mdash; Seconds of Asset available for presentation.\n<p>Default &mdash; Probed from downloaded.\n<p>Types &mdash; All except Type::IMAGE …\n"],["duration=","MovieMasher::Clip","MovieMasher/Clip.html#method-i-duration-3D","(value)","<p>Float &mdash; Seconds of Clip available for presentation.\n<p>Default &mdash; Probed from downloaded.\n<p>Types &mdash; All except Type::IMAGE …\n"],["end_seconds","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-i-end_seconds","()",""],["equals?","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-i-equals-3F","(range)",""],["equation","MovieMasher::Evaluate","MovieMasher/Evaluate.html#method-c-equation","(string, raise_on_fail = nil)",""],["error","MovieMasher::Job","MovieMasher/Job.html#method-i-error","()",""],["error=","MovieMasher::Job","MovieMasher/Job.html#method-i-error-3D","(value)","<p>Problem encountered during #new or #process. If the source of the problem is a command line application …\n"],["error?","MovieMasher::Asset","MovieMasher/Asset.html#method-i-error-3F","()",""],["error?","MovieMasher::Clip","MovieMasher/Clip.html#method-i-error-3F","()",""],["error?","MovieMasher::Destination","MovieMasher/Destination.html#method-i-error-3F","()",""],["error?","MovieMasher::Job","MovieMasher/Job.html#method-i-error-3F","()",""],["error?","MovieMasher::Output","MovieMasher/Output.html#method-i-error-3F","()",""],["error?","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-error-3F","()",""],["escape","MovieMasher::ShellHelper","MovieMasher/ShellHelper.html#method-c-escape","(string)",""],["execute","MovieMasher::ShellHelper","MovieMasher/ShellHelper.html#method-c-execute","(options)",""],["extension","MovieMasher::Callback","MovieMasher/Callback.html#method-i-extension","()",""],["extension","MovieMasher::Output","MovieMasher/Output.html#method-i-extension","()",""],["extension","MovieMasher::Source","MovieMasher/Source.html#method-i-extension","()",""],["extension","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-extension","()",""],["extension=","MovieMasher::Callback","MovieMasher/Callback.html#method-i-extension-3D","(value)","<p>String &mdash; Added to file path after #name, with period inserted between.\n\n"],["extension=","MovieMasher::Output","MovieMasher/Output.html#method-i-extension-3D","(value)","<p>String &mdash; Extension for rendered file, also implies format.\n<p>Default &mdash; Removed from #name if present, otherwise …\n\n"],["extension=","MovieMasher::Source","MovieMasher/Source.html#method-i-extension-3D","(value)","<p>String &mdash; Appended to file path after #name, with period inserted between.\n\n"],["extension=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-extension-3D","(value)","<p>String &mdash; Appended to file path after #name, with period inserted between.\n\n"],["ffmpeg","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-ffmpeg","()",""],["file","MovieMasher::Transfer","MovieMasher/Transfer.html#method-c-file","(mode, path, out_file)",""],["file_name","MovieMasher::Output","MovieMasher/Output.html#method-i-file_name","()",""],["file_name","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-file_name","()",""],["fill","MovieMasher::Input","MovieMasher/Input.html#method-i-fill","()",""],["fill=","MovieMasher::Input","MovieMasher/Input.html#method-i-fill-3D","(value)","<p>String &mdash; How to size in relation to Output#dimensions.\n<p>Constant &mdash; Fill::CROP, Fill::NONE, Fill::SCALE or  …\n"],["filter_command","MovieMasher::Filter","MovieMasher/Filter.html#method-i-filter_command","(_scope)",""],["filter_command","MovieMasher::FilterEvaluated","MovieMasher/FilterEvaluated.html#method-i-filter_command","(scope = nil)",""],["filter_command","MovieMasher::FilterHash","MovieMasher/FilterHash.html#method-i-filter_command","(scope = nil)",""],["filter_command","MovieMasher::FilterSource","MovieMasher/FilterSource.html#method-i-filter_command","(scope)",""],["filter_command","MovieMasher::FilterSourceColor","MovieMasher/FilterSourceColor.html#method-i-filter_command","(scope)",""],["filter_command","MovieMasher::FilterSourceRaw","MovieMasher/FilterSourceRaw.html#method-i-filter_command","(*)",""],["filter_name","MovieMasher::Filter","MovieMasher/Filter.html#method-i-filter_name","()",""],["filter_name","MovieMasher::FilterSourceColor","MovieMasher/FilterSourceColor.html#method-i-filter_name","()",""],["filter_name","MovieMasher::FilterSourceRaw","MovieMasher/FilterSourceRaw.html#method-i-filter_name","()",""],["forecolor","MovieMasher::Output","MovieMasher/Output.html#method-i-forecolor","()",""],["forecolor=","MovieMasher::Output","MovieMasher/Output.html#method-i-forecolor-3D","(value)","<p>String &mdash; Six character Hex color.\n<p>Default &mdash; 000000\n<p>Types &mdash; Only Type::WAVEFORM.\n"],["fps","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-fps","()",""],["full_path","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-full_path","()",""],["gain","MovieMasher::Asset","MovieMasher/Asset.html#method-i-gain","()",""],["gain=","MovieMasher::Asset","MovieMasher/Asset.html#method-i-gain-3D","(value)","<p>Float &mdash; Multiplier to adjust volume of audio when mixed into mashup.\n<p>Array &mdash; Duple Float values signifying …\n"],["gain_changes","MovieMasher::Mash","MovieMasher/Mash.html#method-c-gain_changes","(gain)",""],["get","MovieMasher::Info","MovieMasher/Info.html#method-c-get","(path, type)",""],["goodbye","MovieMasher","MovieMasher.html#method-c-goodbye","()","<p>Returns\n<p>Returns valediction for command line apps.\n"],["graph_command","MovieMasher::Graph","MovieMasher/Graph.html#method-i-graph_command","(output)",""],["graph_command","MovieMasher::GraphMash","MovieMasher/GraphMash.html#method-i-graph_command","(output, dont_set_input_index: false)","<p>LayerTransition\n"],["graph_command","MovieMasher::GraphRaw","MovieMasher/GraphRaw.html#method-i-graph_command","(*)",""],["graph_scope","MovieMasher::Graph","MovieMasher/Graph.html#method-i-graph_scope","()",""],["gtr","MovieMasher::FloatUtil","MovieMasher/FloatUtil.html#method-c-gtr","(big, small, digits = 3)","<p>is one float bigger than another\n"],["gtre","MovieMasher::FloatUtil","MovieMasher/FloatUtil.html#method-c-gtre","(big, small, digits = 3)","<p>is big greater or equal to small\n"],["hash?","MovieMasher::Mash","MovieMasher/Mash.html#method-c-hash-3F","(hash)",""],["hello","MovieMasher","MovieMasher.html#method-c-hello","()","<p>Returns\n<p>Returns salutation for command line apps.\n"],["host","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-host","()",""],["host=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-host-3D","(value)","<p>String &mdash; Remote server name or IP address where file is stored.\n<p>Types &mdash; Type::HTTP and Type::HTTPS.\n\n"],["http","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-http","()",""],["id","MovieMasher::Job","MovieMasher/Job.html#method-i-id","()","<p>String &mdash; user supplied identifier.\n<p>Default &mdash; Nil, or messageId if the Job originated from an SQS message. …\n\n"],["includes?","MovieMasher::AV","MovieMasher/AV.html#method-c-includes-3F","(has, desired)",""],["init","MovieMasher::AwsInitService","MovieMasher/AwsInitService.html#method-i-init","()",""],["init","MovieMasher::AzureInitService","MovieMasher/AzureInitService.html#method-i-init","()",""],["init","MovieMasher::InitService","MovieMasher/InitService.html#method-i-init","()",""],["init_av_input","MovieMasher::Mash","MovieMasher/Mash.html#method-c-init_av_input","(input)",""],["init_hash","MovieMasher::Callback","MovieMasher/Callback.html#method-c-init_hash","(hash)",""],["init_hash","MovieMasher::Destination","MovieMasher/Destination.html#method-c-init_hash","(hash)",""],["init_hash","MovieMasher::Input","MovieMasher/Input.html#method-c-init_hash","(input)",""],["init_hash","MovieMasher::Job","MovieMasher/Job.html#method-c-init_hash","(job)",""],["init_hash","MovieMasher::Mash","MovieMasher/Mash.html#method-c-init_hash","(mash)",""],["init_hash","MovieMasher::Output","MovieMasher/Output.html#method-c-init_hash","(output)",""],["init_hash","MovieMasher::Source","MovieMasher/Source.html#method-c-init_hash","(hash = nil)",""],["init_hash","MovieMasher::Transfer","MovieMasher/Transfer.html#method-c-init_hash","(hash)",""],["init_input","MovieMasher::Mash","MovieMasher/Mash.html#method-c-init_input","(input)",""],["init_mash_input","MovieMasher::Mash","MovieMasher/Mash.html#method-c-init_mash_input","(input)",""],["init_string","MovieMasher::Source","MovieMasher/Source.html#method-c-init_string","(url)",""],["initer","MovieMasher::Service","MovieMasher/Service.html#method-c-initer","(type)",""],["initialize_chains","MovieMasher::Layer","MovieMasher/Layer.html#method-i-initialize_chains","()",""],["initialize_chains","MovieMasher::LayerRawImage","MovieMasher/LayerRawImage.html#method-i-initialize_chains","()",""],["initialize_chains","MovieMasher::LayerRawVideo","MovieMasher/LayerRawVideo.html#method-i-initialize_chains","()",""],["initialize_chains","MovieMasher::LayerTheme","MovieMasher/LayerTheme.html#method-i-initialize_chains","()",""],["initialize_chains","MovieMasher::LayerTransition","MovieMasher/LayerTransition.html#method-i-initialize_chains","()",""],["initialize_filters","MovieMasher::Chain","MovieMasher/Chain.html#method-i-initialize_filters","()",""],["initialize_filters","MovieMasher::ChainEffects","MovieMasher/ChainEffects.html#method-i-initialize_filters","()",""],["initialize_filters","MovieMasher::ChainModule","MovieMasher/ChainModule.html#method-i-initialize_filters","()",""],["initialize_filters","MovieMasher::ChainOverlay","MovieMasher/ChainOverlay.html#method-i-initialize_filters","()",""],["input_length","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-c-input_length","(input)",""],["input_scope","MovieMasher::ChainModule","MovieMasher/ChainModule.html#method-i-input_scope","(scope)",""],["input_time","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-c-input_time","(input, key)",""],["input_trim","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-c-input_trim","(input)",""],["input_trim_range","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-c-input_trim_range","(input)",""],["inputs","MovieMasher::FilterSourceImage","MovieMasher/FilterSourceImage.html#method-i-inputs","()",""],["inputs","MovieMasher::FilterSourceVideo","MovieMasher/FilterSourceVideo.html#method-i-inputs","()",""],["inputs","MovieMasher::Graph","MovieMasher/Graph.html#method-i-inputs","()",""],["inputs","MovieMasher::GraphMash","MovieMasher/GraphMash.html#method-i-inputs","()",""],["inputs","MovieMasher::GraphRaw","MovieMasher/GraphRaw.html#method-i-inputs","()",""],["inputs","MovieMasher::Job","MovieMasher/Job.html#method-i-inputs","()","<p>Array &mdash; One or more Input objects.\n\n"],["inputs","MovieMasher::Layer","MovieMasher/Layer.html#method-i-inputs","()",""],["inputs","MovieMasher::LayerColor","MovieMasher/LayerColor.html#method-i-inputs","()",""],["inputs","MovieMasher::LayerRaw","MovieMasher/LayerRaw.html#method-i-inputs","()",""],["inputs","MovieMasher::LayerTransition","MovieMasher/LayerTransition.html#method-i-inputs","()",""],["instance","MovieMasher::Service","MovieMasher/Service.html#method-c-instance","(kind, type)",""],["intersection","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-i-intersection","(range)",""],["keys","MovieMasher::Hashable","MovieMasher/Hashable.html#method-i-keys","()",""],["layer_command","MovieMasher::Layer","MovieMasher/Layer.html#method-i-layer_command","(scope)",""],["layer_command","MovieMasher::LayerColor","MovieMasher/LayerColor.html#method-i-layer_command","(scope)",""],["layer_command","MovieMasher::LayerRaw","MovieMasher/LayerRaw.html#method-i-layer_command","(scope)",""],["layer_command","MovieMasher::LayerRawImage","MovieMasher/LayerRawImage.html#method-i-layer_command","(scope)",""],["layer_command","MovieMasher::LayerRawVideo","MovieMasher/LayerRawVideo.html#method-i-layer_command","(scope)",""],["layer_command","MovieMasher::LayerTransition","MovieMasher/LayerTransition.html#method-i-layer_command","(scope)",""],["layer_scope","MovieMasher::Layer","MovieMasher/Layer.html#method-i-layer_scope","(scope)",""],["layer_scope","MovieMasher::LayerModule","MovieMasher/LayerModule.html#method-i-layer_scope","(scope)",""],["length","MovieMasher::Asset","MovieMasher/Asset.html#method-i-length","()",""],["length","MovieMasher::Clip","MovieMasher/Clip.html#method-i-length","()",""],["length","MovieMasher::Input","MovieMasher/Input.html#method-i-length","()",""],["length=","MovieMasher::Asset","MovieMasher/Asset.html#method-i-length-3D","(value)","<p>Float &mdash; Seconds the Asset appears in the mashup.\n<p>Default &mdash; #duration - #offset\n\n"],["length=","MovieMasher::Clip","MovieMasher/Clip.html#method-i-length-3D","(value)","<p>Float &mdash; Seconds the Clip appears in the mashup.\n<p>Default &mdash; #duration - #offset\n\n"],["length=","MovieMasher::Input","MovieMasher/Input.html#method-i-length-3D","(value)","<p>Float &mdash; Seconds the input appears in the mashup.\n<p>Default &mdash; #duration - #offset\n\n"],["length_seconds","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-i-length_seconds","(precision = 3)",""],["less","MovieMasher::FloatUtil","MovieMasher/FloatUtil.html#method-c-less","(small, big, digits = 3)","<p>is one float smaller than another\n"],["log","MovieMasher::Job","MovieMasher/Job.html#method-i-log","()","<p>String &mdash; Current content of the job&#39;s log file.\n\n"],["log_entry","MovieMasher::Job","MovieMasher/Job.html#method-i-log_entry","(type, &proc)","<p>Output to the job&#39;s log file. If <strong>type</strong> is :error then job will be halted and its #error will be set …\n"],["loop","MovieMasher::Asset","MovieMasher/Asset.html#method-i-loop","()",""],["loop","MovieMasher::Clip","MovieMasher/Clip.html#method-i-loop","()",""],["loop=","MovieMasher::Asset","MovieMasher/Asset.html#method-i-loop-3D","(value)","<p>Integer &mdash; Number of times to loop Asset.\n<p>Types &mdash; Just Type::AUDIO.\n\n"],["loop=","MovieMasher::Clip","MovieMasher/Clip.html#method-i-loop-3D","(value)","<p>Integer &mdash; Number of times to loop Clip.\n<p>Types &mdash; Just Type::AUDIO.\n\n"],["mash","MovieMasher::Input","MovieMasher/Input.html#method-i-mash","()",""],["mash=","MovieMasher::Input","MovieMasher/Input.html#method-i-mash-3D","(value)","<p>Mash &mdash; The mash to include in rendering.\n<p>Default &mdash; nil\n<p>Types &mdash; Just Type::MASH.\n"],["max","MovieMasher::FloatUtil","MovieMasher/FloatUtil.html#method-c-max","(float1, float2, digits = 3)",""],["media","MovieMasher::Mash","MovieMasher/Mash.html#method-i-media","()","<p>Array &mdash; One or more Media objects.\n\n"],["media","MovieMasher::Mash","MovieMasher/Mash.html#method-c-media","(mash, ob_or_id)",""],["media_count_for_clips","MovieMasher::Mash","MovieMasher/Mash.html#method-c-media_count_for_clips","(mash, clips, referenced)",""],["media_search","MovieMasher::Mash","MovieMasher/Mash.html#method-c-media_search","(type, ob_or_id, mash)",""],["merge","MovieMasher::AV","MovieMasher/AV.html#method-c-merge","(type1, type2)",""],["merger_command","MovieMasher::Layer","MovieMasher/Layer.html#method-i-merger_command","(scope, label, index)",""],["message","MovieMasher::Error::Runtime","MovieMasher/Error/Runtime.html#method-i-message","()",""],["meta_path","MovieMasher::Info","MovieMasher/Info.html#method-c-meta_path","(type, path)",""],["metadata","MovieMasher::Asset","MovieMasher/Asset.html#method-i-metadata","()",""],["metadata","MovieMasher::Output","MovieMasher/Output.html#method-i-metadata","()",""],["method","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-method","()",""],["method=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-method-3D","(value)","<p>String &mdash; How to retrieve the file.\n<p>Constant &mdash; Method::COPY, Method::MOVE or Method::SYMLINK.\n<p>Default &mdash; Method::SYMLINK …\n"],["min","MovieMasher::FloatUtil","MovieMasher/FloatUtil.html#method-c-min","(float1, float2, digits = 3)",""],["mm_cmp","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-mm_cmp","(param_string, _mash, _scope)",""],["mm_dir_horz","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-mm_dir_horz","(param_string, _mash, _scope)",""],["mm_dir_vert","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-mm_dir_vert","(param_string, _mash, _scope)",""],["mm_fontfamily","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-mm_fontfamily","(param_string, mash, _scope)",""],["mm_fontfile","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-mm_fontfile","(param_string, mash, _scope)",""],["mm_horz","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-mm_horz","(param_string, mash = nil, scope = nil)",""],["mm_max","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-mm_max","(param_string, mash, scope)",""],["mm_min","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-mm_min","(param_string, mash, scope)",""],["mm_paren","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-mm_paren","(param_string, _mash, _scope)",""],["mm_textfile","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-mm_textfile","(param_string, _mash, scope)",""],["mm_vert","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-mm_vert","(param_string, mash = nil, scope = nil)",""],["module_for_type","MovieMasher::Defaults","MovieMasher/Defaults.html#method-c-module_for_type","(type, media_id = nil)",""],["module_source","MovieMasher::Clip","MovieMasher/Clip.html#method-i-module_source","()","<p>Transfer &mdash; Resolves relative font URLs for modules.\n<p>Default &mdash; Job#module_source\n<p>Types &mdash; Just Type::MASH.\n"],["module_source","MovieMasher::Input","MovieMasher/Input.html#method-i-module_source","()","<p>Transfer &mdash; Resolves relative font URLs for modules.\n<p>Default &mdash; Job#module_source\n<p>Types &mdash; Just Type::MASH.\n"],["module_source","MovieMasher::Job","MovieMasher/Job.html#method-i-module_source","()",""],["module_source=","MovieMasher::Job","MovieMasher/Job.html#method-i-module_source-3D","(value)","<p>Transfer &mdash; Resolves relative font paths within Media#source String values.\n<p>Default &mdash; #base_source\n\n"],["name","MovieMasher::Callback","MovieMasher/Callback.html#method-i-name","()",""],["name","MovieMasher::Output","MovieMasher/Output.html#method-i-name","()",""],["name","MovieMasher::Source","MovieMasher/Source.html#method-i-name","()",""],["name","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-name","()",""],["name=","MovieMasher::Callback","MovieMasher/Callback.html#method-i-name-3D","(value)","<p>String &mdash; The full or basename of file added to URL after #path. If full, #extension will be set and removed …\n\n"],["name=","MovieMasher::Output","MovieMasher/Output.html#method-i-name-3D","(value)","<p>String &mdash; Basename for rendered file.\n<p>Default &mdash; #type, or empty for Type::SEQUENCE.\n<p>Types &mdash; All, but Type::SEQUENCE …\n"],["name=","MovieMasher::Source","MovieMasher/Source.html#method-i-name-3D","(value)","<p>String &mdash; The full or basename of file appended to file path. If full, #extension will be set and removed …\n\n"],["name=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-name-3D","(value)","<p>String &mdash; The full or basename of file appended to file path. If full, #extension will be set and removed …\n\n"],["new","MovieMasher::Chain","MovieMasher/Chain.html#method-c-new","(input = nil, job_input = nil)",""],["new","MovieMasher::ChainModule","MovieMasher/ChainModule.html#method-c-new","(mod_input, mash_input, applied_input)",""],["new","MovieMasher::ChainOverlay","MovieMasher/ChainOverlay.html#method-c-new","(job_output)",""],["new","MovieMasher::ChainScaler","MovieMasher/ChainScaler.html#method-c-new","(input = nil, job_input = nil)",""],["new","MovieMasher::Error::JobRender","MovieMasher/Error/JobRender.html#method-c-new","(ffmpeg_result, the_msg = 'failed to render')",""],["new","MovieMasher::Error::Runtime","MovieMasher/Error/Runtime.html#method-c-new","(the_msg = nil)",""],["new","MovieMasher::Filter","MovieMasher/Filter.html#method-c-new","(id = nil)",""],["new","MovieMasher::FilterEvaluated","MovieMasher/FilterEvaluated.html#method-c-new","(filter_config, mash_input = nil, applied_input = nil)",""],["new","MovieMasher::FilterHash","MovieMasher/FilterHash.html#method-c-new","(id, hash = nil)",""],["new","MovieMasher::FilterSetpts","MovieMasher/FilterSetpts.html#method-c-new","(expr = 'PTS-STARTPTS')",""],["new","MovieMasher::FilterSource","MovieMasher/FilterSource.html#method-c-new","(id, hash, dimensions = nil)",""],["new","MovieMasher::FilterSourceColor","MovieMasher/FilterSourceColor.html#method-c-new","(duration, color)",""],["new","MovieMasher::FilterSourceRaw","MovieMasher/FilterSourceRaw.html#method-c-new","(input, job_input)",""],["new","MovieMasher::Graph","MovieMasher/Graph.html#method-c-new","(job = nil, job_input = nil, render_range = nil)",""],["new","MovieMasher::GraphMash","MovieMasher/GraphMash.html#method-c-new","(job, mash_input, render_range = nil, label_name = 'layer')",""],["new","MovieMasher::GraphRaw","MovieMasher/GraphRaw.html#method-c-new","(input)","<p>a video or image input\n"],["new","MovieMasher::Hashable","MovieMasher/Hashable.html#method-c-new","(hash = nil)","<p>Set the actual Hash when creating.\n"],["new","MovieMasher::Input","MovieMasher/Input.html#method-c-new","(hash = nil)",""],["new","MovieMasher::Job","MovieMasher/Job.html#method-c-new","(hash_or_path)","<p>Create a new Job object from a nested structure or a file path.\n<p>hash_or_path &mdash; Hash or String expected to …\n\n"],["new","MovieMasher::Layer","MovieMasher/Layer.html#method-c-new","(input, job_input)",""],["new","MovieMasher::LayerColor","MovieMasher/LayerColor.html#method-c-new","(duration, color)",""],["new","MovieMasher::LayerTransition","MovieMasher/LayerTransition.html#method-c-new","(job, input, job_input)",""],["new","MovieMasher::Mash","MovieMasher/Mash.html#method-c-new","(hash)",""],["new","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-c-new","(path)",""],["new","MovieMasher::Output","MovieMasher/Output.html#method-c-new","(hash)",""],["new","MovieMasher::Source","MovieMasher/Source.html#method-c-new","(hash_or_string = nil)",""],["new","MovieMasher::SqsQueueService","MovieMasher/SqsQueueService.html#method-c-new","()",""],["new","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-c-new","(start = 0, rate = 0, length = 1)",""],["new","MovieMasher::Transfer","MovieMasher/Transfer.html#method-c-new","(hash = nil)",""],["no_audio","MovieMasher::Asset","MovieMasher/Asset.html#method-i-no_audio","()",""],["no_audio","MovieMasher::Output","MovieMasher/Output.html#method-i-no_audio","()",""],["no_audio=","MovieMasher::Asset","MovieMasher/Asset.html#method-i-no_audio-3D","(value)","<p>Boolean &mdash; If true, audio in Asset will be ignored.\n<p>Default &mdash; Initially based on #type, but could change after …\n"],["no_audio=","MovieMasher::Output","MovieMasher/Output.html#method-i-no_audio-3D","(value)","<p>Boolean &mdash; If true, audio in inputs will not be included.\n<p>Default &mdash; FALSE\n<p>Types &mdash; Just Type::VIDEO, but accessible …\n"],["no_video","MovieMasher::Asset","MovieMasher/Asset.html#method-i-no_video","()",""],["no_video=","MovieMasher::Asset","MovieMasher/Asset.html#method-i-no_video-3D","(value)","<p>Boolean &mdash; If true, video in Asset will be ignored.\n<p>Default &mdash; Initially based on #type, but could change after …\n"],["nonzero","MovieMasher::FloatUtil","MovieMasher/FloatUtil.html#method-c-nonzero","(float1)",""],["object","MovieMasher::Evaluate","MovieMasher/Evaluate.html#method-c-object","(data, scope = nil)",""],["offset","MovieMasher::Asset","MovieMasher/Asset.html#method-i-offset","()",""],["offset","MovieMasher::Input","MovieMasher/Input.html#method-i-offset","()",""],["offset=","MovieMasher::Asset","MovieMasher/Asset.html#method-i-offset-3D","(value)","<p>Float &mdash; Seconds to remove from beginning of Asset.\n<p>Default &mdash; 0.0 means nothing removed.\n<p>Types &mdash; Type::AUDIO and …\n"],["offset=","MovieMasher::Input","MovieMasher/Input.html#method-i-offset-3D","(value)","<p>Float &mdash; Seconds to remove from beginning of input.\n<p>Default &mdash; 0.0 means nothing removed.\n<p>Types &mdash; Type::AUDIO and …\n"],["output_command","MovieMasher::ShellHelper","MovieMasher/ShellHelper.html#method-c-output_command","(output, av_type, duration = nil)",""],["output_path","MovieMasher::Job","MovieMasher/Job.html#method-i-output_path","(output, no_trailing_slash: false)",""],["outputs","MovieMasher::Job","MovieMasher/Job.html#method-i-outputs","()","<p>Array &mdash; One or more Output objects.\n\n"],["outputs_desire","MovieMasher::Job","MovieMasher/Job.html#method-i-outputs_desire","()",""],["parameters","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-parameters","()",""],["parameters=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-parameters-3D","(value)","<p>Hash &mdash; Query string parameters to send with request for file. The values are evaluated, with Job and Input …\n"],["parse","MovieMasher::Info","MovieMasher/Info.html#method-c-parse","(type, ffmpeg_output)",""],["pass","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-pass","()",""],["pass=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-pass-3D","(value)","<p>String &mdash; Password for standard HTTP authentication.\n<p>Default &mdash; Nil means do not provide authenticating details. …\n"],["path","MovieMasher::Output","MovieMasher/Output.html#method-i-path","()",""],["path","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-path","()",""],["path=","MovieMasher::Output","MovieMasher/Output.html#method-i-path-3D","(value)","<p>String &mdash; Prepended to #name during upload.\n<p>Default &mdash; empty\n\n"],["path=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-path-3D","(value)","<p>String &mdash; Added to URL after #directory, before #name, slashed.\n<p>Default &mdash; Nil means do not add to URL.\n<p>Types … &mdash; "],["port","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-port","()",""],["port=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-port-3D","(value)","<p>Integer &mdash; Port number to contact #host on.\n<p>Constant &mdash; Method::COPY, Method::MOVE or Method::SYMLINK.\n<p>Default … &mdash; "],["precision","MovieMasher::FloatUtil","MovieMasher/FloatUtil.html#method-c-precision","(float, digits = 3)",""],["precision","MovieMasher::Output","MovieMasher/Output.html#method-i-precision","()",""],["precision=","MovieMasher::Output","MovieMasher/Output.html#method-i-precision-3D","(value)","<p>Integer &mdash; Number of decimal places that Job#duration and #duration must match by for successful rendering …\n"],["prefixed_configuration","MovieMasher::AwsHelper","MovieMasher/AwsHelper.html#method-i-prefixed_configuration","(key, hash)",""],["preflight","MovieMasher::Asset","MovieMasher/Asset.html#method-i-preflight","(job = nil)",""],["preflight","MovieMasher::Input","MovieMasher/Input.html#method-i-preflight","(job = nil)",""],["preflight","MovieMasher::Job","MovieMasher/Job.html#method-i-preflight","()",""],["preflight","MovieMasher::Mash","MovieMasher/Mash.html#method-i-preflight","(job = nil)",""],["preflight","MovieMasher::Output","MovieMasher/Output.html#method-i-preflight","(_job)",""],["process","MovieMasher","MovieMasher.html#method-c-process","(object_or_path)","<p>object_or_path &mdash; Job object or String/Hash to be passed to Job.new along with ::configuration. After the …\n\n"],["process","MovieMasher::Job","MovieMasher/Job.html#method-i-process","()","<p>Downloads assets for each Input, renders each Output and uploads to #destination or Output#destination …\n"],["process_jobs","MovieMasher","MovieMasher.html#method-c-process_jobs","(array)","<p>Calls process for each item in array of job strings or paths\n"],["process_queues","MovieMasher","MovieMasher.html#method-c-process_queues","(process_seconds = nil)","<p>Searches configured queue(s) for job(s) and processes.\n<p>process_seconds &mdash; overrides this same configuration …\n\n"],["progress","MovieMasher::Job","MovieMasher/Job.html#method-i-progress","()","<p>Current status of processing. The following keys are available:\n<p>:downloading &mdash; number of files referenced …\n"],["progress_seconds","MovieMasher::Callback","MovieMasher/Callback.html#method-i-progress_seconds","()",""],["progress_seconds=","MovieMasher::Callback","MovieMasher/Callback.html#method-i-progress_seconds-3D","(value)","<p>Integer &mdash; Seconds to wait before making requests.\n<p>Default &mdash; 44100\n<p>Triggers &mdash; Only Trigger::PROGRESS.\n"],["quality","MovieMasher::Output","MovieMasher/Output.html#method-i-quality","()",""],["quality=","MovieMasher::Output","MovieMasher/Output.html#method-i-quality-3D","(value)","<p>Integer &mdash; FFmpeg -q:v switch, 1 (best) to 32 (worst).\n<p>Default &mdash; 1\n<p>Types &mdash; Type::IMAGE and Type::SEQUENCE.\n"],["query_string","MovieMasher::Transfer","MovieMasher/Transfer.html#method-c-query_string","(transfer, job)",""],["queue_url","MovieMasher::SqsQueueService","MovieMasher/SqsQueueService.html#method-i-queue_url","()",""],["queues","MovieMasher::Service","MovieMasher/Service.html#method-c-queues","()",""],["raise_unless_rendered","MovieMasher::ShellHelper","MovieMasher/ShellHelper.html#method-c-raise_unless_rendered","(result, cmd, options)",""],["range","MovieMasher::Layer","MovieMasher/Layer.html#method-i-range","()",""],["range","MovieMasher::LayerColor","MovieMasher/LayerColor.html#method-i-range","()",""],["receive_job","MovieMasher::FileQueueService","MovieMasher/FileQueueService.html#method-i-receive_job","()",""],["receive_job","MovieMasher::QueueService","MovieMasher/QueueService.html#method-i-receive_job","()",""],["receive_job","MovieMasher::SqsQueueService","MovieMasher/SqsQueueService.html#method-i-receive_job","()",""],["region","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-region","()",""],["region=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-region-3D","(value)","<p>String &mdash; Global AWS geographical region code.\n<p>Default &mdash; Nil means us-east-1 standard region.\n<p>Types &mdash; Just Type::S3 …\n"],["relative?","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-relative-3F","()",""],["render_path","MovieMasher::Job","MovieMasher/Job.html#method-i-render_path","(output)",""],["required","MovieMasher::Output","MovieMasher/Output.html#method-i-required","()",""],["required=","MovieMasher::Output","MovieMasher/Output.html#method-i-required-3D","(value)","<p>Boolean &mdash; Whether or not Job should halt if output fails render or upload.\n<p>Default &mdash; nil\n\n"],["resolved_hash","MovieMasher::Hashable","MovieMasher/Hashable.html#method-c-resolved_hash","(hash_or_path)",""],["rgb","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-rgb","(param_string, _mash = nil, _scope = nil)",""],["rgba","MovieMasher::FilterHelpers","MovieMasher/FilterHelpers.html#method-c-rgba","(param_string, _mash = nil, _scope = nil)",""],["s3_client","MovieMasher::AwsHelper","MovieMasher/AwsHelper.html#method-i-s3_client","()",""],["s3_configuration","MovieMasher::AwsHelper","MovieMasher/AwsHelper.html#method-i-s3_configuration","()",""],["s3_resource","MovieMasher::AwsHelper","MovieMasher/AwsHelper.html#method-i-s3_resource","()",""],["safe_path","MovieMasher::FileHelper","MovieMasher/FileHelper.html#method-c-safe_path","(path, mod = nil)",""],["scope_value","MovieMasher::FilterEvaluated","MovieMasher/FilterEvaluated.html#method-i-scope_value","(scope, value_str)","<p>only called directly from here and tests\n"],["secure","MovieMasher::HttpDownloadService","MovieMasher/HttpDownloadService.html#method-i-secure","()",""],["secure","MovieMasher::HttpUploadService","MovieMasher/HttpUploadService.html#method-i-secure","()",""],["secure","MovieMasher::HttpsDownloadService","MovieMasher/HttpsDownloadService.html#method-i-secure","()",""],["secure","MovieMasher::HttpsUploadService","MovieMasher/HttpsUploadService.html#method-i-secure","()",""],["sequence_complete","MovieMasher::Output","MovieMasher/Output.html#method-c-sequence_complete","(output)",""],["services","MovieMasher::Service","MovieMasher/Service.html#method-c-services","(kind = nil)",""],["set","MovieMasher::Info","MovieMasher/Info.html#method-c-set","(path, type, data)",""],["set_if","MovieMasher::Info","MovieMasher/Info.html#method-c-set_if","(path, type, result)",""],["set_output_commands","MovieMasher::ShellHelper","MovieMasher/ShellHelper.html#method-c-set_output_commands","(job, output)",""],["slice","MovieMasher::Hashable","MovieMasher/Hashable.html#method-i-slice","(*keys)",""],["sort","MovieMasher::FloatUtil","MovieMasher/FloatUtil.html#method-c-sort","(float1, float2)",""],["source","MovieMasher::Asset","MovieMasher/Asset.html#method-i-source","()",""],["source=","MovieMasher::Asset","MovieMasher/Asset.html#method-i-source-3D","(value)","<p>Describes the download request for the element, as either a URL or Hash/Source. If the URL is relative …\n"],["sox","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-sox","()",""],["sqs_client","MovieMasher::AwsHelper","MovieMasher/AwsHelper.html#method-i-sqs_client","()",""],["sqs_configuration","MovieMasher::AwsHelper","MovieMasher/AwsHelper.html#method-i-sqs_configuration","()",""],["start","MovieMasher::Clip","MovieMasher/Clip.html#method-i-start","()",""],["start","MovieMasher::Input","MovieMasher/Input.html#method-i-start","()",""],["start=","MovieMasher::Clip","MovieMasher/Clip.html#method-i-start-3D","(value)","<p>Float &mdash; Seconds from start of mashup to introduce the Clip.\n<p>Default &mdash; -1.0 means after previous audio in mashup …\n"],["start=","MovieMasher::Input","MovieMasher/Input.html#method-i-start-3D","(value)","<p>Float &mdash; Seconds from start of mashup to introduce the input.\n<p>Default &mdash; -1.0 means after previous audio in …\n"],["start_seconds","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-i-start_seconds","(precision = 3)",""],["stop","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-i-stop","()",""],["string","MovieMasher::FloatUtil","MovieMasher/FloatUtil.html#method-c-string","(float, digits = 3)",""],["strip_slash_end","MovieMasher::Path","MovieMasher/Path.html#method-c-strip_slash_end","(string)",""],["strip_slash_start","MovieMasher::Path","MovieMasher/Path.html#method-c-strip_slash_start","(string)",""],["strip_slashes","MovieMasher::Path","MovieMasher/Path.html#method-c-strip_slashes","(string)",""],["switch","MovieMasher::ShellHelper","MovieMasher/ShellHelper.html#method-c-switch","(value, prefix = '', suffix = '', dont_escape: false)",""],["symbolize","MovieMasher::Hashable","MovieMasher/Hashable.html#method-c-symbolize","(hash_or_array, key = nil)",""],["synchronize","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-i-synchronize","(time, rounding = :round)",""],["to_hash","MovieMasher::Hashable","MovieMasher/Hashable.html#method-i-to_hash","()","<p>Return deep copy of underlying Hash.\n"],["to_json","MovieMasher::Hashable","MovieMasher/Hashable.html#method-i-to_json","(state = nil)","<p>Return underlying Hash in JSON format.\n"],["to_s","MovieMasher::Error::Runtime","MovieMasher/Error/Runtime.html#method-i-to_s","()",""],["to_s","MovieMasher::Hashable","MovieMasher/Hashable.html#method-i-to_s","()",""],["trigger","MovieMasher::Callback","MovieMasher/Callback.html#method-i-trigger","()",""],["trigger=","MovieMasher::Callback","MovieMasher/Callback.html#method-i-trigger-3D","(value)","<p>String &mdash; The event that fires the request.\n<p>Constant &mdash; Trigger::INITIATE, Trigger::PROGRESS, Trigger::ERROR …\n"],["trim_command","MovieMasher::Layer","MovieMasher/Layer.html#method-i-trim_command","(render_range)",""],["trim_command","MovieMasher::LayerColor","MovieMasher/LayerColor.html#method-i-trim_command","(*)",""],["type","MovieMasher::Asset","MovieMasher/Asset.html#method-i-type","()",""],["type","MovieMasher::Info","MovieMasher/Info.html#method-c-type","(path)",""],["type","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-type","()",""],["type","MovieMasher::Output","MovieMasher/Output.html#method-i-type","()",""],["type","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-type","()",""],["type=","MovieMasher::Asset","MovieMasher/Asset.html#method-i-type-3D","(value)","<p>String &mdash; The kind of Asset.\n<p>Constant &mdash; Type::AUDIO, Type::IMAGE, Type::MASH or Type::VIDEO.\n<p>Default &mdash; Probed …\n"],["type=","MovieMasher::Output","MovieMasher/Output.html#method-i-type-3D","(value)","<p>String &mdash; The kind of output.\n<p>Constant &mdash; Type::AUDIO, Type::IMAGE, Type::SEQUENCE, Type::VIDEO or Type::WAVEFORM …\n"],["type=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-type-3D","(value)","<p>String &mdash; The kind of transfer.\n<p>Constant &mdash; Type::FILE, Type::HTTP, Type::HTTPS or Type::S3.\n<p>Default &mdash; Type::FILE …\n"],["update","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-c-update","(inputs, outputs)",""],["update_inputs","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-c-update_inputs","(inputs)",""],["update_outputs","MovieMasher::TimeRange","MovieMasher/TimeRange.html#method-c-update_outputs","(outputs, output_duration)",""],["upload","MovieMasher::Destination","MovieMasher/Destination.html#method-i-upload","(options)",""],["upload","MovieMasher::FileUploadService","MovieMasher/FileUploadService.html#method-i-upload","(options)",""],["upload","MovieMasher::HttpUploadService","MovieMasher/HttpUploadService.html#method-i-upload","(options)",""],["upload","MovieMasher::S3UploadService","MovieMasher/S3UploadService.html#method-i-upload","(options)",""],["upload","MovieMasher::UploadService","MovieMasher/UploadService.html#method-i-upload","(*)",""],["uploader","MovieMasher::Service","MovieMasher/Service.html#method-c-uploader","(type)",""],["url","MovieMasher::Asset","MovieMasher/Asset.html#method-i-url","(base_src = nil, module_src = nil)",""],["url","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-url","()",""],["url_count","MovieMasher::Mash","MovieMasher/Mash.html#method-i-url_count","(desired)",""],["url_path","MovieMasher::Asset","MovieMasher/Asset.html#method-c-url_path","(url)",""],["user","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-user","()",""],["user=","MovieMasher::Transfer","MovieMasher/Transfer.html#method-i-user-3D","(value)","<p>String &mdash; Username for standard HTTP authentication.\n<p>Default &mdash; Nil means do not provide authenticating details. …\n"],["value","MovieMasher::Evaluate","MovieMasher/Evaluate.html#method-c-value","(string, scope = nil)",""],["values","MovieMasher::Hashable","MovieMasher/Hashable.html#method-i-values","()",""],["video","MovieMasher::Mash","MovieMasher/Mash.html#method-i-video","()","<p>Array &mdash; One or more Track objects.\n\n"],["video?","MovieMasher::Mash","MovieMasher/Mash.html#method-c-video-3F","(mash)",""],["video_bitrate","MovieMasher::Output","MovieMasher/Output.html#method-i-video_bitrate","()",""],["video_bitrate=","MovieMasher::Output","MovieMasher/Output.html#method-i-video_bitrate-3D","(value)","<p>String &mdash; FFmpeg -b:v switch, placed between #video_codec &amp; #video_rate.\n<p>Integer &mdash; The character &#39;k&#39; …\n"],["video_codec","MovieMasher::Output","MovieMasher/Output.html#method-i-video_codec","()",""],["video_codec=","MovieMasher::Output","MovieMasher/Output.html#method-i-video_codec-3D","(value)","<p>String &mdash; FFmpeg -c:v switch, between #video_format &amp; #video_bitrate.\n<p>Default &mdash; libx264 -level 41 -movflags …\n"],["video_duration","MovieMasher::MetaReader","MovieMasher/MetaReader.html#method-i-video_duration","()",""],["video_format","MovieMasher::Output","MovieMasher/Output.html#method-i-video_format","()",""],["video_format=","MovieMasher::Output","MovieMasher/Output.html#method-i-video_format-3D","(value)","<p>String &mdash; FFmpeg -f:v switch, placed between #dimensions &amp; #video_codec.\n<p>Default &mdash; nil\n<p>Types &mdash; Only Type::VIDEO …\n"],["video_graphs","MovieMasher::Input","MovieMasher/Input.html#method-c-video_graphs","(inputs, job)",""],["video_graphs","MovieMasher::Job","MovieMasher/Job.html#method-i-video_graphs","()",""],["video_ranges","MovieMasher::Mash","MovieMasher/Mash.html#method-c-video_ranges","(mash)",""],["video_rate","MovieMasher::Output","MovieMasher/Output.html#method-i-video_rate","()",""],["video_rate=","MovieMasher::Output","MovieMasher/Output.html#method-i-video_rate-3D","(value)","<p>String &mdash; FFmpeg -r:v switch, placed after #video_bitrate.\n<p>Default &mdash; 30\n<p>Types &mdash; Type::SEQUENCE and Type::VIDEO …\n"],["Changelog","","Changelog.html","","<p>version &lt;future&gt;:\n<p>freeze frame\n\n<p>version 4.0.25:\n"],["Documentation","","Documentation_md.html","","<p><img src=\"https://github.com/moviemasher/moviemasher.rb/raw/master/README/logo-120x60.png\"> <strong>moviemasher.js</strong> …\n"],["README","","README_md.html","","<p><img src=\"https://rawgit.com/moviemasher/moviemasher.rb/master/README/logo-120x60.png\"> <strong>moviemasher.js</strong> …\n"]]}}